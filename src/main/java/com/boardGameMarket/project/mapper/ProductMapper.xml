<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.boardGameMarket.project.mapper.ProductMapper">
  	
  	<sql id = "criteria">
  			<if test="keyword != null">
  				product_name LIKE '%'||#{keyword}||'%' AND
  			</if>
  			<if test="page_category_code != 0">
  				product_category_code = ${page_category_code} AND
  			</if>
  	</sql>
  	
  	<sql id = "order_by">
  		<choose>
  			<when test="order_by == null or order_by == 'new'">
  				Product
  			</when>
  			<when test="order_by == 'best'">
  				(SELECT * FROM Product ORDER BY product_sell DESC)
  			</when>
  			<when test="order_by == 'high'">
  				(SELECT * FROM Product ORDER BY product_price DESC)
  			</when>
  			<when test="order_by == 'row'">
  				(SELECT * FROM Product ORDER BY product_price ASC)
  			</when>
  			
  			<!-- 관리자페이지 상품관리 오더바이 -->
  			<when test="order_by == 'stock_high'">
  				(SELECT * FROM Product ORDER BY product_stock DESC)
  			</when>
  			<when test="order_by == 'stock_row'">
  				(SELECT * FROM Product ORDER BY product_stock ASC)
  			</when>
  		</choose>
  	</sql>
  
  	<select id="getProductList" resultType="com.boardGameMarket.project.domain.ProductVO">
  		
  	<![CDATA[
  		SELECT * FROM (
  			SELECT /*+INDEX_DESC(Product SYS_C007605) */
  				rownum as rn, product_id, product_name, product_price, product_info,
  				product_stock, product_sell, product_category_code, product_updateDate, product_regDate
  				FROM   	]]>
  
  				<include refid="order_by"></include>
  
  				WHERE
  
  				<include refid="criteria"></include>
  		
  	<![CDATA[
  				rownum <= #{pageNum}*#{amount}
  				)
  				WHERE rn > (#{pageNum} -1) * #{amount}
  	]]>
  	</select>
  	
  	<select id="getProduct" resultType="com.boardGameMarket.project.domain.ProductVO">
  		SELECT * FROM Product WHERE product_id = #{product_id}
  	</select>
  	
  	<insert id="product_registration" parameterType="com.boardGameMarket.project.domain.ProductVO">
  	
  		<selectKey resultType="int" keyProperty="product_id" order="BEFORE">
  			SELECT Product_id_seq.NEXTVAL FROM dual
  		</selectKey>
  		
  		INSERT INTO Product(product_id,product_name,product_price,product_info,product_stock,
  							product_sell,product_category_code,product_updateDate,product_regDate)
  		 VALUES 
  		 (#{product_id},#{product_name},#{product_price},#{product_info},#{product_stock},
  		 #{product_sell},#{product_category_code},sysdate,sysdate)
  	</insert>
  	
  	<insert id="image_registration" parameterType="com.boardGameMarket.project.domain.AttachFileDTO">
  		INSERT INTO Product_image(product_id,fileName,uploadPath,uuid)
  		 VALUES (#{product_id},#{fileName},#{uploadPath},#{uuid})
  	</insert>
  	
  	<select id="getAttachFile" resultType="com.boardGameMarket.project.domain.AttachFileDTO">
  		SELECT * FROM Product_image WHERE product_id = #{product_id}
  	</select>
  	
  	<select id="categoryList" resultType="com.boardGameMarket.project.domain.CategoryVO">
  		SELECT * FROM Product_Category ORDER BY category_code
  	</select>
  	
  	<select id="productGetTotal" resultType="int">
  		SELECT COUNT(*) FROM Product
  		<trim prefix="WHERE" suffixOverrides="AND">
  			<include refid="criteria"></include>	
  		</trim>
  	</select>
  	
  	<update id="product_modify" parameterType="com.boardGameMarket.project.domain.ProductVO">
  		UPDATE Product SET product_name = #{product_name}, product_price = #{product_price}, product_info = #{product_info},
  						   product_stock = #{product_stock}, product_sell = #{product_sell}, product_category_code = #{product_category_code}, product_updateDate = sysdate
  		WHERE product_id = #{product_id}
  	</update>
  	
  	<delete id="deleteImage" parameterType="int">
  		DELETE FROM Product_Image WHERE product_id = #{product_id}
  	</delete>
  	
  	<delete id="product_remove" parameterType="int">
  		DELETE FROM Product WHERE product_id = #{product_id}
  	</delete>
  	
  	<select id="getChartData" resultType="com.boardGameMarket.project.domain.ChartDTO">
  		<![CDATA[	
  			SELECT TO_CHAR(a.orderDate, 'YYYY/MM/DD') as sell_date, b.product_count as sell_count
  				FROM Product_Order a JOIN Product_Order_Element b 
				ON a.order_id = b.order_id WHERE product_id = #{product_id} 
				AND a.orderDate >= TO_DATE(#{startDay}, 'YYYY/MM/DD')
				AND a.orderDate < TO_DATE(#{endDay}, 'YYYY/MM/DD') + 1 ORDER BY sell_date ASC ]]>
  	</select>
  	
  </mapper>